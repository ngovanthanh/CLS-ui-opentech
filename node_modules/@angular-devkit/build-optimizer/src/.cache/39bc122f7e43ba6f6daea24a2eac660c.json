{"remainingRequest":"/home/ict/cloudstack-ui/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/ict/cloudstack-ui/node_modules/@ng-idle/core/src/storageinterruptsource.js","dependencies":[{"path":"/home/ict/cloudstack-ui/node_modules/@ng-idle/core/src/storageinterruptsource.js","mtime":1522328033000},{"path":"/home/ict/cloudstack-ui/node_modules/cache-loader/dist/cjs.js","mtime":1534015689334},{"path":"/home/ict/cloudstack-ui/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\nimport { WindowInterruptSource } from './windowinterruptsource';\n/*\n * An interrupt source on the storage event of Window.\n */\nvar /*\n * An interrupt source on the storage event of Window.\n */ StorageInterruptSource = (function (_super) {\n    __extends(StorageInterruptSource, _super);\n    function StorageInterruptSource(throttleDelay) {\n        if (throttleDelay === void 0) {\n            throttleDelay = 500;\n        }\n        return _super.call(this, 'storage', throttleDelay) || this;\n    }\n    /*\n     * Checks to see if the event should be filtered.\n     * @param event - The original event object.\n     * @return True if the event should be filtered (don't cause an interrupt); otherwise, false.\n     */\n    /*\n       * Checks to see if the event should be filtered.\n       * @param event - The original event object.\n       * @return True if the event should be filtered (don't cause an interrupt); otherwise, false.\n       */\n    StorageInterruptSource.prototype.filterEvent = /*\n       * Checks to see if the event should be filtered.\n       * @param event - The original event object.\n       * @return True if the event should be filtered (don't cause an interrupt); otherwise, false.\n       */\n        function (event) {\n            if (event.key.indexOf('ng2Idle.') >= 0 && event.key.indexOf('.expiry') >= 0) {\n                return false;\n            }\n            return true;\n        };\n    return StorageInterruptSource;\n}(WindowInterruptSource));\n/*\n * An interrupt source on the storage event of Window.\n */\nexport { StorageInterruptSource };\n//# sourceMappingURL=storageinterruptsource.js.map \n",null]}